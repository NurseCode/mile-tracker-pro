name: Pure React Native Build (No Expo)
on:
  workflow_dispatch:
    inputs:
      test_name:
        description: 'Test identifier'
        required: false
        default: 'pure-react-native'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Install dependencies
        run: npm install
        
      - name: Install React Native CLI
        run: npm install -g @react-native-community/cli
        
      - name: Create Android directories
        run: |
          echo "Creating Android project structure..."
          mkdir -p android/app/src/main/java/com/miletrackerpro/app
          mkdir -p android/app/src/main/res/values
          mkdir -p android/app/src/main/res/mipmap-hdpi
          
      - name: Generate Android configuration files
        run: |
          echo "Creating Android build files..."
          
          # Create settings.gradle
          cat > android/settings.gradle << 'EOF'
          rootProject.name = 'MileTrackerPro'
          include ':app'
          EOF
          
          # Create build.gradle (project)
          cat > android/build.gradle << 'EOF'
          buildscript {
              ext {
                  buildToolsVersion = "34.0.0"
                  minSdkVersion = 21
                  compileSdkVersion = 34
                  targetSdkVersion = 34
                  ndkVersion = "25.1.8937393"
              }
              dependencies {
                  classpath("com.android.tools.build:gradle:8.1.1")
              }
          }
          
          allprojects {
              repositories {
                  google()
                  mavenCentral()
                  maven { url "https://www.jitpack.io" }
              }
          }
          EOF
          
          # Create app/build.gradle
          cat > android/app/build.gradle << 'EOF'
          apply plugin: "com.android.application"
          
          android {
              namespace "com.miletrackerpro.app"
              compileSdkVersion rootProject.ext.compileSdkVersion
              
              defaultConfig {
                  applicationId "com.miletrackerpro.app"
                  minSdkVersion rootProject.ext.minSdkVersion
                  targetSdkVersion rootProject.ext.targetSdkVersion
                  versionCode 1
                  versionName "1.0"
              }
              buildTypes {
                  release {
                      minifyEnabled false
                      proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
                  }
              }
          }
          
          dependencies {
              implementation 'androidx.appcompat:appcompat:1.6.1'
              implementation 'com.google.android.material:material:1.9.0'
          }
          EOF
          
      - name: Create Android source files
        run: |
          echo "Creating MainActivity..."
          cat > android/app/src/main/java/com/miletrackerpro/app/MainActivity.java << 'EOF'
          package com.miletrackerpro.app;
          
          import androidx.appcompat.app.AppCompatActivity;
          import android.os.Bundle;
          
          public class MainActivity extends AppCompatActivity {
              @Override
              protected void onCreate(Bundle savedInstanceState) {
                  super.onCreate(savedInstanceState);
                  setContentView(R.layout.activity_main);
              }
          }
          EOF
          
          # Create strings.xml
          cat > android/app/src/main/res/values/strings.xml << 'EOF'
          <resources>
              <string name="app_name">MileTracker Pro</string>
          </resources>
          EOF
          
          # Create activity_main.xml
          mkdir -p android/app/src/main/res/layout
          cat > android/app/src/main/res/layout/activity_main.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              android:orientation="vertical"
              android:gravity="center">
              
              <TextView
                  android:layout_width="wrap_content"
                  android:layout_height="wrap_content"
                  android:text="MileTracker Pro"
                  android:textSize="24sp"
                  android:textStyle="bold" />
                  
          </LinearLayout>
          EOF
          
          # Create AndroidManifest.xml  
          mkdir -p android/app/src/main
          cat > android/app/src/main/AndroidManifest.xml << 'EOF'
          <manifest xmlns:android="http://schemas.android.com/apk/res/android"
              package="com.miletrackerpro.app">
              
              <application
                  android:allowBackup="true"
                  android:label="@string/app_name"
                  android:theme="@style/Theme.AppCompat.Light.DarkActionBar">
                  <activity
                      android:name=".MainActivity"
                      android:exported="true">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>
              </application>
          </manifest>
          EOF
          
      - name: Create Gradle Wrapper
        run: |
          echo "Creating Gradle wrapper..."
          cd android
          cat > gradlew << 'EOF'
          #!/bin/bash
          exec gradle "$@"
          EOF
          chmod +x gradlew
          
      - name: Build APK
        run: |
          echo "Building APK..."
          cd android
          ./gradlew clean assembleRelease
          
      - name: List build outputs
        run: |
          echo "Checking build outputs..."
          find android -name "*.apk" -type f
          ls -la android/app/build/outputs/apk/release/ || echo "Release directory not found"
          
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: pure-react-native-apk
          path: android/app/build/outputs/apk/release/*.apk
