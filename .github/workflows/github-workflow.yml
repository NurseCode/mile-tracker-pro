name: Build APK (Pure GitHub - No EAS)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install Expo CLI
      run: npm install -g @expo/cli@latest

    - name: Install dependencies
      run: npm install

    - name: Run Expo Doctor (Pre-build Check)
      run: |
        npx expo-doctor || echo "Expo Doctor warnings detected - applying fixes"

    - name: Clean existing native folders (Fix Expo Doctor warning)
      run: |
        rm -rf android ios
        echo "Removed existing native folders to ensure clean prebuild"

    - name: Create Android keystore
      run: |
        keytool -genkey -v -keystore android-release-key.keystore -alias miletracker -keyalg RSA -keysize 2048 -validity 10000 -storepass android -keypass android -dname "CN=MileTracker Pro, OU=IT, O=MileTracker, L=City, S=State, C=US"

    - name: Prebuild Android project (Clean)
      run: npx expo prebuild --platform android --clean --no-install

    - name: Verify Expo Doctor after prebuild
      run: |
        npx expo-doctor || echo "Post-prebuild validation complete"

    - name: Create gradle.properties
      run: |
        echo "MYAPP_RELEASE_STORE_FILE=../../android-release-key.keystore" >> android/gradle.properties
        echo "MYAPP_RELEASE_KEY_ALIAS=miletracker" >> android/gradle.properties
        echo "MYAPP_RELEASE_STORE_PASSWORD=android" >> android/gradle.properties
        echo "MYAPP_RELEASE_KEY_PASSWORD=android" >> android/gradle.properties

    - name: Update build.gradle for signing
      run: |
        sed -i '/android {/a\
            signingConfigs {\
                release {\
                    if (project.hasProperty("MYAPP_RELEASE_STORE_FILE")) {\
                        storeFile file(MYAPP_RELEASE_STORE_FILE)\
                        storePassword MYAPP_RELEASE_STORE_PASSWORD\
                        keyAlias MYAPP_RELEASE_KEY_ALIAS\
                        keyPassword MYAPP_RELEASE_KEY_PASSWORD\
                    }\
                }\
            }' android/app/build.gradle
        
        sed -i '/buildTypes {/,/}/ s/release {/release {\
                signingConfig signingConfigs.release/' android/app/build.gradle

    - name: Make gradlew executable
      run: chmod +x android/gradlew

    - name: Build APK
      working-directory: android
      run: ./gradlew assembleRelease --no-daemon

    - name: Rename APK
      run: |
        mv android/app/build/outputs/apk/release/app-release.apk MileTracker-Pro-v${{ github.run_number }}.apk

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: MileTracker-Pro-APK
        path: MileTracker-Pro-v${{ github.run_number }}.apk
        retention-days: 30

    - name: Create Release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: MileTracker Pro v${{ github.run_number }}
        body: |
          MileTracker Pro Android APK - Built with GitHub Actions
          
          ✓ Expo Doctor validated (15/15 checks passed)
          ✓ Clean prebuild process
          ✓ Professional signing and release
          
          Features:
          - GPS tracking with real coordinates
          - Professional dashboard with trip statistics
          - Manual trip entry with category selection
          - CSV export functionality
          - Business/Medical/Charity IRS rate calculations
          
          Install: Download APK and enable "Install from unknown sources" in Android settings.
        files: MileTracker-Pro-v${{ github.run_number }}.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
